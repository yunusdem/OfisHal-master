<!-- JAVASCRIPT -->
<script src="~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/assets/libs/simplebar/simplebar.min.js"></script>
<script src="~/assets/libs/node-waves/waves.min.js"></script>
<script src="~/assets/libs/feather-icons/feather.min.js"></script>
<script src="~/assets/js/pages/plugins/lord-icon-2.1.0.js"></script>
<script src="~/assets/js/plugins.js"></script>
<script src="~/assets/js/app.js"></script>
<script src="~/lib/jquery/jquery.min.js"></script>
<!-- Sweet Alerts js -->
<script src="~/assets/libs/sweetalert2/sweetalert2.min.js"></script>
<script src="~/assets/customScripts/alertsFuncs.js"></script>
<!-- Datatabl -->
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.print.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.html5.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="~/assets/libs/cleave.js/cleave.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        //type number olan bütün inputlara tıklandığında direk seçer
        var typeNum = document.querySelectorAll("input[type='number']");
        for (var i = 0; i < typeNum.length; i++) {
            typeNum[i].addEventListener("focus", function () { this.select(); });
        }

        var decNumInputs = document.querySelectorAll("input[data-type='num']");
        ConfigureInputs(decNumInputs, {
            numeral: true,
            numeralDecimalScale: 2,
            numeralIntegerScale: 9,
            delimiter: ".",
            numeralDecimalMark: ","
        });

        var numInputs = document.querySelectorAll('input[data-type="numNotDec"]');
        ConfigureInputs(numInputs, {
            numeral: true,
            numeralDecimalScale: 0,
            numeralIntegerScale: 12,
            delimiter: '.',
            numeralDecimalMark: ',',
        });

        decNumInputs.forEach(function (input) {
            var inputValue = input.value;
            if (inputValue.includes(',')) {
                var decimalPart = inputValue.split(',')[1];
                if (decimalPart.length === 1) {
                    input.value = inputValue + '0';
                }
            } else {
                input.value = inputValue + ',00';
            }
        });
        var focusoutTriggered = false;
        $("form").on("keypress", function (event) {
            if (event.which == 13) {
                event.preventDefault();
                var $allInputs = $('form input:not([type=hidden]):not([disabled]), form select:not([disabled]), form textarea')
                var $this = $(event.target);
                var index = $allInputs.index($this);
                if (index >= 0 && index < $allInputs.length - 1) {
                    event.preventDefault();
                    if ($($allInputs[index + 1]).is("select#WorkSpace.form-control")) {
                        //$($allInputs[index]).trigger("focusout");
                    }
                    if ($($allInputs[index]).is("input[type='submit'].btn.btn-primary")) {
                        $("form").first().trigger("submit");
                    }
                    $allInputs[index + 1].focus();
                }
            }
        });
    });
    function ConfigureInputs(inputs, options) {
        for (var i = 0; i < inputs.length; i++) {
            new Cleave(inputs[i], options);
            inputs[i].addEventListener("focus", function () { this.select(); });
        }
    }
    function formatNumberInput(input) {
        new Cleave(input, {
            numeral: true,
            numeralDecimalScale: 2,
            delimiter: ".",
            numeralDecimalMark: ","
        });
        var inputValue = input.value;
        if (inputValue.includes(',')) {
            var decimalPart = inputValue.split(',')[1];
            if (decimalPart.length === 1) {
                input.value = inputValue + '0';
            }
        } else {
            input.value = inputValue + ',00';
        }
    }

    function CreateDatatable(tableId) {
        let table = new DataTable(tableId, {
            dom: 'Bfrtip',
            pageLength: 25,
            buttons: [
                'copy', 'csv', 'excel', 'print', 'pdf'
            ],
            language: {
                //url: "https://cdn.datatables.net/plug-ins/1.13.7/i18n/tr.json",
                //url: "~/assets/json/datatable-tr.json",
                "info": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                "infoEmpty": "Kayıt yok",
                "infoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                "infoThousands": ".",
                "lengthMenu": "Sayfada _MENU_ kayıt göster",
                "loadingRecords": "Yükleniyor...",
                "processing": "İşleniyor...",
                "search": "Ara:",
                "zeroRecords": "Eşleşen kayıt bulunamadı",
                "paginate": {
                    "first": "İlk",
                    "last": "Son",
                    "next": "Sonraki",
                    "previous": "Önceki"
                },
                "buttons": {
                    "csv": "CSV",
                    "excel": "Excel",
                    "print": "Yazdır",
                    "copy": "Kopyala",
                    "copyTitle": "Panoya Kopyalandı",
                    "pdf": "PDF",
                    "copySuccess": {
                        "_": "%d Satır Kopyalandı",
                        "1": "1 Satır Kopyalandı"
                    },
                },
            }
        });
        setTimeout(function () {
            $(".dataTables_filter input[type='search']").focus();
        }, 500);
        table.on('draw', function () {
            $(".dataTables_filter input[type='search']").focus();
        });
        var selectedRowIndex = -1;
        $(document).on("keydown", function (e) {
            var visibleRows = $("tbody .rows:visible");
            if (e.which == 38 || e.which == 40) {
                e.which == 38 && selectedRowIndex > 0 ? selectedRowIndex-- : null;
                e.which == 40 && selectedRowIndex < visibleRows.length - 1 ? selectedRowIndex++ : null;
                var selectedRow = visibleRows.eq(selectedRowIndex);
                selectedRow.find("input").prop("checked", true);
            }
            e.which == 13 ? closeModal() : null;
        });
        return table;
    }
    function BakiyeSoyle(url, reqId) {
        return new Promise((resolve, reject) => {
            $.ajax({
                url: url,
                type: "GET",
                data: { id: reqId },
                cache: false,
                success: (res) => {
                    resolve(res);
                }
            });
        });
    }
    function GetInputVal(val) {
        return parseFloat(parseFloat(val.replace(".", "").replace(",", ".")).toFixed(2));
    };
    function SetInputVal(val) {
        return val.toString().replace(".", ",");
    }
    function GetCurrentDate() {
        const date = new Date();
        let day = date.getDate();
        let month = date.getMonth() + 1;
        let year = date.getFullYear();
        if (day.length == 1)
            day = "0" + day;
        if (month.length == 1)
            month = "0" + month;

        let currentDate = `${day}.${month}.${year}`;
        return currentDate;
    }
</script>
@if (TempData["ErrorMessage"] != null)
{
    <script>

           ShowAlert(false, '@(TempData["ErrorMessage"])');
    </script>
}
@if (TempData["SuccessMessage"] != null)
{
    <script>

            ShowAlert(true, '@(TempData["SuccessMessage"])');
    </script>
}
<script>
    // Ajax başlangıcı için global bir olay dinleyicisi ekle
    $(document).ajaxStart(function () {
        $('body').removeClass('loaded');

    });

    // Ajax bitişi için global bir olay dinleyicisi ekle
    $(document).ajaxStop(function () {
        $('body').addClass('loaded');
    });
</script>