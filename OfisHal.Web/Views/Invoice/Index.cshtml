@model List<InvoiceSearchResultViewModel>
@{
    ViewBag.title = "E-Belge Bildirimi";

    ViewBag.pagetitle = "Satış İşlemleri";
    ViewBag.ptitle = "E-Belge Bildirimi";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var startDate = (string)ViewData["StartDate"];
    var endDate = (string)ViewData["EndDate"];
    var despatch = Request["type"] == "3";
}
<form method="post">
    <div class="row justify-content-between">
        <div class="col-md-5">
            <div class="row">
                <label for="firstDate" class="col-md-2 col-form-label">
                    İlk Tarih
                </label>
                <div class="col-md-4">
                    <input type="date" name="startDate" id="startDate" class="form-control form-control-sm" value="@startDate" />
                </div>
                <label for="lastDate" class="col-md-2 col-form-label">
                    Son Tarih
                </label>
                <div class="col-md-4">
                    <input type="date" name="endDate" id="endDate" class="form-control form-control-sm"value="@endDate" />
                </div>
            </div>
            <div class="row">
                <label for="firstNo" class="col-md-2 col-form-label">
                    İlk No
                </label>
                <div class="col-md-4">
                    <input type="text" name="firstNo" id="firstNo" class="form-control form-control-sm" />
                </div>
                <label for="lastNo" class="col-md-2 col-form-label">
                    Son No
                </label>
                <div class="col-md-4">
                    <input type="text" name="lastNo" id="lastNo" class="form-control form-control-sm" />
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="row">
                <div class="col-md-4">
                    <select class="form-select form-select-sm" name="status">
                        <option value="0" @((byte)ViewData["status"] == 0 ? "selected" : "")>Hazır</option>
                        <option value="1" @((byte)ViewData["status"] == 1 ? "selected" : "")>Gönderildi</option>
                        <option value="2" @((byte)ViewData["status"] == 2 ? "selected" : "")>Hatalı</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <select class="form-select form-select-sm" name="type">
                        <option value="0" @((byte?)ViewData["type"] == 0 ? "selected" : "")>E-Fatura</option>
                        <option value="1" @((byte?)ViewData["type"] == 1 ? "selected" : "")>E-Arşiv Faturası</option>
                        <option value="3" @((byte?)ViewData["type"] == 3 ? "selected" : "")>E-Irsaliye</option>
                    </select>
                </div>

                <div class="col-md-4">
                    <button class="btn btn-sm btn-primary w-100">Listele</button>
                </div>
            </div>
        </div>
    </div>
</form>
<form id="ebelgeForm" target="_blank">
    <div class="row my-2">
        <table class="table table-sm" id="belgelTable">
            <thead>
                <tr>
                    <th>
                        <button type="button" class="btn btn-sm btn-primary" onclick="selectAll()">Tümünü Seç</button>
                    </th>
                    <th>E-Belge No</th>
                    <th>Tarih</th>
                    <th>Ünvan</th>
                    <th>Tutar</th>
                    <th>E-Belge</th>
                    <th>Hata Açıklaması</th>
                    @if ((byte)ViewData["status"] != 1)
                    {
                        <th>Gönderildi Olarak İşaretle</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model?.Count > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <label>
                                    <input type="checkbox" name="Id" value="@item.Id" />
                                </label>
                              
                            </td>
                            <td>
                                <a href="@Url.Action("Index", "TohalFaturas", new { faturaId = item.Id })">
                                    @item.No
                                </a>
                            </td>
                            <td>
                                <a href="@Url.Action("Preview", new { id = item.Id,despatch })" target="_blank">
                                    @item.Tarih.ToShortDateString()
                                </a>
                            </td>
                            <td>
                                @if (item.CariKartId > 0)
                                {
                                    <a href="@Url.Action("MEdit", "TohalCariKarts", new { id = item.CariKartId })" target="_blank">
                                        @item.Unvan
                                    </a>
                                }
                                else
                                {
                                    @item.Unvan
                                }
                            </td>
                            <td>@item.ToplamTutar.WriteCurrency()</td>
                            <td>@item.BelgeTuruS</td>
                            <td>@item.HataAciklamasi</td>
                            @if((byte)ViewData["status"] != 1){
                            <td><button class="btn btn-success" onclick="faturaGonderildi(@item.Id)">İşaretle</button></td>
                            }
                        </tr>
                    }

                }
                else
                {
                    <tr>
                        <td colspan="6">Kayıt bulunamadı</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="row">
        <div class="col">
            <input type="hidden" value="@Request.Form["type"]" name="type" />
            <button id="eBelgeBut" class="btn btn-success">Gönder</button>
            <button id="mailGonder" class="btn btn-outline-secondary">Mail Olarak Gönder</button>
        </div>
    </div>
</form>

@section Styles {
    <!--datatable css-->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" />
    <!--datatable responsive css-->
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.bootstrap.min.css" />

    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.2.2/css/buttons.dataTables.min.css">
}
@section Scripts {

    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>

    <!--datatable js-->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.html5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>

    <script>
        $("#mailGonder").click(function () {

            var ids = new Array();

            $("input[name='Id']:checked").each(function (i, e) {
                if (i == 0) {
                    alert("Seçtiğiniz faturalar mail gönderim kuyruğuna eklendi");
                }
                ids.push($(e).val());
            });

            $.post("@Url.Action("SendMails")", { ids }, function (result) {
                //console.log(result);
            });
        });

        //buttons exmples
        document.addEventListener('DOMContentLoaded', function () {
            let table = new DataTable('#belgelTable', {

                responsive: true,
                searching: false,
                language: {
                    //url: "https://cdn.datatables.net/plug-ins/1.13.7/i18n/tr.json",
                    //url: "~/assets/json/datatable-tr.json",
                    "info": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                    "infoEmpty": "Kayıt yok",
                    "infoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                    "infoThousands": ".",
                    "lengthMenu": "Sayfada _MENU_ kayıt göster",
                    "loadingRecords": "Yükleniyor...",
                    "processing": "İşleniyor...",
                    "search": "Ara:",
                    "zeroRecords": "Eşleşen kayıt bulunamadı",
                    "paginate": {
                        "first": "İlk",
                        "last": "Son",
                        "next": "Sonraki",
                        "previous": "Önceki"
                    },
                }
            });
        });
        //// Input elementlerini seç
        //var startDateInput = document.getElementById("startDate");
        //var endDateInput = document.getElementById("endDate");

        //// Input değerleri değiştiğinde tetiklenecek fonksiyon
        //startDateInput.addEventListener("change", function () {
        //    // Yeni seçilen başlangıç tarihini al
        //    var selectedStartDate = startDateInput.value;

        //    // İstediğin işlemleri burada gerçekleştir
        //    // Örneğin, yeni tarihi bir başka elemente yazdırabilir veya başka bir işlem yapabilirsin
        //    console.log("Yeni seçilen başlangıç tarihi: " + selectedStartDate);
        //});

        //endDateInput.addEventListener("change", function () {
        //    // Yeni seçilen bitiş tarihini al
        //    var selectedEndDate = endDateInput.value;

        //    // İstediğin işlemleri burada gerçekleştir
        //    // Örneğin, yeni tarihi bir başka elemente yazdırabilir veya başka bir işlem yapabilirsin
        //    console.log("Yeni seçilen bitiş tarihi: " + selectedEndDate);
        //});


        document.getElementById('ebelgeForm').addEventListener('submit', function (event) {
            event.preventDefault();
        });
        // Sayfa yüklendikten sonra çalışacak jQuery kodları
        $(document).ready(function () {
            // 'eBelgeBut' id'sine sahip butonun click olayını dinleme
            $('#eBelgeBut').click(function () {
                // Seçili olan checkbox'ların Id değerlerini al
                var selectedIds = $('input[name="Id"]:checked').map(function () {
                    return this.value;
                }).get();

                // Seçilen belge türünü al
                var selectedType = $('input[name="type"]').val();

                // AJAX isteği gönderme fonksiyonunu çağırma
                sendSelectedIds(selectedIds, selectedType);
            });
        });

        function sendSelectedIds(selectedIds, selectedType) {
            $.ajax({
                url: '/Invoice/SendSelected', // Controller ve action adını doğru şekilde değiştirin
                type: 'POST',
                data: { Id: selectedIds, type: selectedType },
                success: function (result) {
                    if (result.success) {
                        {
                            for (var i = 0; i < result.message.length; i++) {
                                if (result.message[i].status == "success") {
                                    SuccessAlert(result.message[i].message);
                                }
                                else {
                                    ErrorAlert(result.message[i].message);
                                }
                            }
                            location.reload();
                        }

                    } else {
                        // Hata durumu
                        ErrorAlert(result.message[0].message);
                    }
                },
                error: function () {
                    // Hata durumu
                    ErrorAlert("Beklenmedik bir hata oluştu.");
                }
            });
        }

        function faturaGonderildi(faturaId) {
            $.ajax({
                type: "GET",
                url: "/Invoice/FaturaGonderildi",
                data: { faturaId: faturaId },
                success: function (response) {
                    if (response.success === 'success') {
                        {
                            SuccessAlert(response.message);
                            location.reload();
                        }
                    } else {
                        // Hata durumu
                        ErrorAlert(response.message);
                        location.reload();
                    }
                },
                error: function (error) {
                    // Hata durumu
                    ErrorAlert("Beklenmedik bir hata oluştu.");
                }
            });
        }
        function selectAll() {
            $('input[name="Id"]').prop('checked', true);
        }

    </script>
}
